name: Test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  build-lint:
    strategy:
      matrix:
        node-version: [20.x]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: pnpm/action-setup@v2
      name: Install pnpm
      id: pnpm-install
      with:
        version: latest
        run_install: |
          - recursive: true
            args: [--no-frozen-lockfile]

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3.8.1
      with:
        node-version: ${{ matrix.node-version }}

    - name: build
      run: |
        pnpm lint --fix
        pnpm build
        pnpm package
        pnpm test

  action-test:
    strategy:
      matrix:
        node-version: [20.x]
        args: [
          {
            'yarn': 'false', 'path': './tests/package-test.json', 'ignore': '[]'
          },
          {
            'yarn': 'true', 'path': './tests/package-test.json', 'ignore': '[]'
          },
          {
            'yarn': 'false', 'path': './tests/package-test.json',
            'ignore': '[ "@types/jest", "jest", "jest-circus", "ts-jest" ]'
          },
          {
            'yarn': 'true', 'path': './tests/package-test.json',
            'ignore': '[ "@types/jest", "jest", "jest-circus", "ts-jest" ]'
          }
        ]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3.8.1
      with:
        node-version: ${{ matrix.node-version }}

    - name: prepare
      id: prepare
      run: |
        TEMP=$(mktemp -d);
        PKG_JSON=${TEMP}/package.json
        cp -pR ${{ matrix.args.path }} ${PKG_JSON}
        echo "TEMP=${TEMP}" >> $GITHUB_ENV
        echo "PKG_JSON=${PKG_JSON}" >> "$GITHUB_OUTPUT"
        lock_file=package-lock.json
        if [ ${{ matrix.args.yarn }} = 'true' ]; then
          lock_file=yarn.lock
        fi
        echo "LOCK_FILE=${TEMP}/${lock_file}" >> "$GITHUB_OUTPUT"

    - name: update and test
      uses: './'
      with:
        yarn: ${{ matrix.args.yarn }}
        debug: true
        path: ${{ steps.prepare.outputs.PKG_JSON }}
        ignore: |
          ${{ matrix.args.ignore }}

    - name: verify test result
      env:
        LOCK_FILE: ${{ steps.prepare.outputs.LOCK_FILE }}
      run: test -e "${{ steps.prepare.outputs.LOCK_FILE }}" || exit 1
